@model ProductSolrResultModel

@if (Model.ProductFacets.Any())
{
    var hasFilterApplied = !string.IsNullOrWhiteSpace(Model.Facets);
    
    <h2>
        @T("VIU.Plugin.SolrSearch.ResultPage.FilterTitle")
    </h2>
    
    @if (hasFilterApplied)
    {
        <a href="@(Url.Action("SearchProducts", "SolrSearch", new { q = Model.q }))"
           onclick="SolrSearch.resetFilter()">
            @T("VIU.Plugin.SolrSearch.ResultPage.FilterReset")
        </a>
    }
    
    <div class="ajax-products-busy"></div>
    
    <div class="category-description">
        @foreach (var facet in Model.ProductFacets)
        {
            //if(facet.FacetValues.Any(f => f.OptionProductCount <= 0)) continue;
            
            <h3>
                @facet.FacetDisplayName
            </h3>
            
            <ul>
                @foreach (var option in facet.FacetValues)
                {
                    var facetDisabled = option.OptionProductCount <= 0;
                    
                    
                        @if (option.FilterActive)
                        {
                            <li>
                                <a href="#" onclick="SolrSearch.filter('@facet.FacetName', '@option.OptionName')">
                                    <strong>@option.OptionDisplayName x</strong>
                                </a>
                            </li>
                        }
                        else if (facetDisabled)
                        {
                            <li>
                                <a href="#" disabled="disabled" style="text-decoration: line-through;">
                                    @option.OptionDisplayName
                                </a>
                            </li>
                        }
                        else
                        {
                            <li>
                                <a href="#" onclick="SolrSearch.filter('@facet.FacetName', '@option.OptionName')">
                                    @option.OptionDisplayName (@option.OptionProductCount)
                                </a>
                            </li>
                        }
                }
            </ul>
        }
    </div>
    
    <script asp-location="Footer">
        @{
            var q = !string.IsNullOrWhiteSpace(Model.q) ? "?q=" + Uri.EscapeDataString(Model.q) : string.Empty;
        }
        var SolrSearch = {
            loading: false,
            
            setLoading: function () {
                this.loading = true;  
                
                $('.ajax-products-busy').show();
            },
                     
            filter: function (facet, option){
                
                if (this.loading) return;
                
                this.setLoading();
    
                let facets = this.loadFacetsFromQuery();
                    
                if (Object.keys(facets).length > 0){
                    
                    if (!facets[facet]){
                        facets[facet] = [];           
                    }  
                    
                    if (facets[facet].includes(option)){
                        facets[facet] = facets[facet].filter(e => e !== option);
                        
                        if (facets[facet].length <= 0){
                            delete facets[facet];
                        }
                    }else{
                        facets[facet].push(option);   
                    }
                        
                }else{
                    
                    facets[facet] = [];             
                    facets[facet].push(option);
                    
                }
                
                this.applyFilter(facets);
            },
            
            resetFilter: function () {
                if (this.loading) return;
                
                this.setLoading();
            },
            
            loadFacetsFromQuery: function() {
                let facets = {};            
                
                const facetsParam = this.getParameterByName('facets'); 
                
                if (!facetsParam || facetsParam.length <= 0) return facets;
                
                const facetStrings = facetsParam.split(',');
                              
                facetStrings.forEach(function(value) {
                    const facetName = value.split(':')[0];
                    facets[facetName] = value.split(':')[1].split('|');
                });
                
                return facets;
            },
            
            applyFilter: function(facets) {
                const baseUrl = location.protocol + '//' + location.host + location.pathname;
                const q = decodeURI("@q");
                
                if (Object.keys(facets).length <= 0) {
                    window.location.href = baseUrl + q;
                }
                
                let query = (!q ? "?" : "&") + "facets=";
                
                Object.keys(facets).forEach(key => {
                    query += key + ":" + facets[key].join('|') + ",";
                });
                
                query = query.slice(0, -1);
                
                window.location.href = baseUrl + q + query;
            },
            
            getParameterByName: function(name, url = window.location.href) {
                name = name.replace(/[\[\]]/g, '\\$&');
                const regex = new RegExp('[?&]' + name + '(=([^&#]*)|&|#|$)'),
                    results = regex.exec(url);
                if (!results) return null;
                if (!results[2]) return '';
                return decodeURIComponent(results[2].replace(/\+/g, ' '));
            }
        }
    </script>
}